version: '3.7'

services:
  minio1:
    image: minio/minio
    command: server /data/minio/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - "MINIO_ROOT_USER=minioadmin"
      - "MINIO_ROOT_PASSWORD=minioadmin"
      - "MINIO_API_SELECT_PARQUET=on"
      - "TZ=Asia/Shanghai"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio1
    # volumes:
    #   - data1-1:/data1
    #   - data1-2:/data2

  createbuckets:
    image: minio/mc
    depends_on:
      - minio1
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio1:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/warehouse;
      exit 0;
      "

  postgres:
    restart: always
    image: postgis/postgis:11-3.3
    hostname: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_DB=demo_catalog"
      - "TZ=Asia/Shanghai"
    healthcheck:
      test: "PGPASSWORD=password pg_isready -h 127.0.0.1 -U admin -d demo_catalog"
      interval: 10s
      timeout: 5s
      retries: 5

  # if need persistent data, add volume below
  mysql:
    restart: always
    image: mysql:8
    environment:
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=demo_catalog"
      - "TZ=Asia/Shanghai"
    ports:
      - "3306:3306"
    command:
      - "mysqld"
      - "--innodb_buffer_pool_size=1024M"
      - "--max-connections=100000"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

## By default, this config uses default local driver,
## For custom volumes replace with volume driver configuration.
#volumes:
#  data1-1:
#  data1-2: